
// Model (Abstract Syntax)

concept PropertyList
{
    properties: list of Property*;
}

// Validator (Well-Formedness Rules)

command validatePropertyList(propertyList: PropertyList)
{
    for property in propertyList.properties
        invoke validateProperty(property);
}

// Concrete Syntax

concept PropertyListNode: Node
{
    propertyNodes: list of PropertyNode*;
}

command SyntaxTreeBuilder.createPropertyList()
{
    let propertyListNode = new PropertyListNode;

    ensure
    {
        syntaxTree.currentPropertyListNode = propertyListNode;
    }
}

// Model Synthesis (Synthesized Attributes / Inherited Scopes)

command synthesizePropertyList(propertyList: ~PropertyList, propertyListNode: PropertyListNode, parentScope: Scope)
{
    for propertyNode in propertyListNode.propertyNodes
        invoke synthesizeProperty(propertyNode, parentScope);

    ensure
    {
        propertyList.properties = propertyListNode.propertyNodes.property;
    }
}
