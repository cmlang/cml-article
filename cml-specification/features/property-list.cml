
// Model (Abstract Syntax)

concept PropertyList
{
    properties: list of Property*;
}

// Validator (Well-Formedness Rules)

collaborator propertyListValidator: PropertyListValidator;

interface PropertyListValidator
{
    command validatePropertyList(propertyList: PropertyList)
    {
        for property in propertyList.properties
            invoke propertyValidator.validateProperty(property);
    }
}

// Concrete Syntax

concept PropertyListNode: Node
{
    propertyNodes: list of PropertyNode*;
}

// Model Synthesis (Synthesized Attributes / Inherited Scopes)

collaborator conceptSynthesizer: ConceptSynthesizer;

interface PropertyListSynthesizer
{
    command synthesizePropertyList(propertyList: ~PropertyList, propertyListNode: PropertyListNode, parentScope: Scope)
    {
        for propertyNode in propertyListNode.propertyNodes
            invoke synthesizeProperty(propertyNode, parentScope);

        ensure
        {
            propertyList.properties = propertyListNode.propertyNodes.property;
        }
    }
}
